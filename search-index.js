var searchIndex = {};
searchIndex['systemd-dbus'] = {"items":[[0,"","systemd-dbus","Rust API for Systemd commands via DBus."],[3,"UnitStatus","","Unit status returned from systemd."],[3,"Job","","Systemd Job information"],[3,"UnitFile","","Systemd unit file information"],[3,"UnitFileChange","","Systemd unit file change information"],[3,"UnitFileChanges","","Systemd unit file changes"],[3,"UnitProperty","","A Unit property"],[3,"UnitAux","","Unit properties"],[3,"Connection","","Main type representing a connection to systemd via Dbus."],[4,"SystemdError","","Errors that can arise on systemd DBus operations."],[13,"BusError","","An error from the underlying DBus library",0],[13,"DecoderError","","An error from decoding a DBus message",0],[13,"EncoderError","","An error from encoding a DBus message",0],[13,"InvalidArg","","Invalid arg passed to a DBus operation.",0],[13,"UnspecifiedError","","Catch all error type",0],[4,"Match","","Match rules for notifications"],[13,"Type","","match on type, type='…'",1],[13,"Sender","","match on sender, sender='…'",1],[13,"Interface","","match on interface, interface='…'",1],[13,"Member","","match on member, member='…'",1],[13,"Path","","match on path, path='…'",1],[13,"Destination","","match on destination, destination='…'",1],[13,"Arg","","match on arg n, arg0='…'",1],[5,"rule_string","","Return a rule string for a sequence of matches"],[0,"serialize","","Serialization support for data over DBus."],[3,"Decoder","systemd-dbus::serialize","Decoder"],[3,"Encoder","","Encoder object, to encode to Vec<MessageItem>"],[4,"DecoderError","","Error type for serialization"],[13,"NotImplemented","","Type not implemented by the decoder",2],[13,"ExpectedError","","Expected error",2],[13,"UnknownVariantError","","Variant type unknown",2],[13,"ApplicationError","","Other errors",2],[4,"EncoderError","","Encoder Error Type"],[13,"EncodeNotImplemented","","Unimplemented type in the encoder",3],[13,"InternalEncodeError","","Other encoder error",3],[5,"decode","","Convenience function to decode a vector of MessageItem"],[5,"encode","","Utility function to encode an Encodable instance to a MessageItem"],[6,"DecodeResult","","Result type for decoding dbus messages"],[6,"EncodeResult","","Result type for encoder functions."],[11,"fmt","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"clone","","",2],[11,"new","","Return a new Decoder instance which will parse the\npassed `items`.",4],[6,"Error","",""],[11,"read_nil","","",4],[11,"read_usize","","",4],[11,"read_u8","","",4],[11,"read_u16","","",4],[11,"read_u32","","",4],[11,"read_u64","","",4],[11,"read_isize","","",4],[11,"read_i8","","",4],[11,"read_i16","","",4],[11,"read_i32","","",4],[11,"read_i64","","",4],[11,"read_f32","","",4],[11,"read_f64","","",4],[11,"read_bool","","",4],[11,"read_char","","",4],[11,"read_str","","",4],[11,"read_enum","","",4],[11,"read_enum_variant","","",4],[11,"read_enum_variant_arg","","",4],[11,"read_enum_struct_variant","","",4],[11,"read_enum_struct_variant_field","","",4],[11,"read_struct","","",4],[11,"read_struct_field","","",4],[11,"read_tuple","","",4],[11,"read_tuple_arg","","",4],[11,"read_tuple_struct","","",4],[11,"read_tuple_struct_arg","","",4],[11,"read_option","","",4],[11,"read_seq","","",4],[11,"read_seq_elt","","",4],[11,"read_map","","",4],[11,"read_map_elt_key","","",4],[11,"read_map_elt_val","","",4],[11,"error","","",4],[11,"fmt","","",3],[11,"eq","","",3],[11,"ne","","",3],[11,"clone","","",3],[11,"fmt","","",5],[11,"eq","","",5],[11,"ne","","",5],[11,"clone","","",5],[6,"Error","",""],[11,"emit_nil","","",5],[11,"emit_usize","","",5],[11,"emit_u64","","",5],[11,"emit_u32","","",5],[11,"emit_u16","","",5],[11,"emit_u8","","",5],[11,"emit_isize","","",5],[11,"emit_i64","","",5],[11,"emit_i32","","",5],[11,"emit_i16","","",5],[11,"emit_i8","","",5],[11,"emit_bool","","",5],[11,"emit_f64","","",5],[11,"emit_f32","","",5],[11,"emit_char","","",5],[11,"emit_str","","",5],[11,"emit_enum","","",5],[11,"emit_enum_variant","","",5],[11,"emit_enum_variant_arg","","",5],[11,"emit_enum_struct_variant","","",5],[11,"emit_enum_struct_variant_field","","",5],[11,"emit_struct","","",5],[11,"emit_struct_field","","",5],[11,"emit_tuple","","",5],[11,"emit_tuple_arg","","",5],[11,"emit_tuple_struct","","",5],[11,"emit_tuple_struct_arg","","",5],[11,"emit_option","","",5],[11,"emit_option_none","","",5],[11,"emit_option_some","","",5],[11,"emit_seq","","",5],[11,"emit_seq_elt","","",5],[11,"emit_map","","",5],[11,"emit_map_elt_key","","",5],[11,"emit_map_elt_val","","",5],[6,"ObjectPath","systemd-dbus","Define an ObjectPath as a String"],[6,"SystemdResult","","Result type for systemd DBus errors."],[11,"fmt","","",0],[11,"from_error","","",0],[11,"from_error","","",0],[11,"from_error","","",0],[11,"from_error","","",0],[11,"fmt","","",6],[11,"encode","","",6],[11,"decode","","",6],[11,"fmt","","",7],[11,"encode","","",7],[11,"decode","","",7],[11,"fmt","","",8],[11,"encode","","",8],[11,"decode","","",8],[11,"fmt","","",9],[11,"encode","","",9],[11,"decode","","",9],[11,"fmt","","",10],[11,"encode","","",10],[11,"decode","","",10],[11,"fmt","","",11],[11,"encode","","",11],[11,"decode","","",11],[11,"fmt","","",12],[11,"encode","","",12],[11,"decode","","",12],[11,"fmt","","",1],[11,"fmt","","",1],[11,"fmt","","",13],[11,"new","","Create a new connection to systemd",13],[11,"add_match","","Add a match rule for signals",13],[11,"systemd_signals","","Start subscription to systemd signals",13],[11,"get_unit","","",13],[11,"get_unit_by_pid","","",13],[11,"load_unit","","",13],[11,"start_unit","","",13],[11,"start_unit_replace","","",13],[11,"stop_unit","","",13],[11,"reload_unit","","",13],[11,"restart_unit","","",13],[11,"try_restart_unit","","",13],[11,"reload_or_restart_unit","","",13],[11,"reload_or_try_restart_unit","","",13],[11,"kill_unit","","",13],[11,"reset_failed_unit","","",13],[11,"get_job","","",13],[11,"cancel_job","","",13],[11,"clear_jobs","","",13],[11,"reset_failed","","",13],[11,"list_units","","",13],[11,"list_jobs","","",13],[11,"subscribe","","",13],[11,"unsubscribe","","",13],[11,"create_snapshot","","",13],[11,"remove_snapshot","","",13],[11,"reload","","",13],[11,"reexecute","","",13],[11,"reboot","","",13],[11,"power_off","","",13],[11,"halt","","",13],[11,"k_exec","","",13],[11,"switch_root","","",13],[11,"set_environment","","",13],[11,"unset_environment","","",13],[11,"unset_and_set_environment","","",13],[11,"list_unit_files","","",13],[11,"get_unit_file_state","","",13],[11,"enable_unit_files","","",13],[11,"disable_unit_files","","",13],[11,"reenable_unit_files","","",13],[11,"link_unit_files","","",13],[11,"preset_unit_files","","",13],[11,"mask_unit_files","","",13],[11,"unmask_unit_files","","",13],[11,"set_default_target","","",13],[11,"get_default_target","","",13],[11,"set_unit_properties","","",13],[11,"set_transient_unit","","",13]],"paths":[[4,"SystemdError"],[4,"Match"],[4,"DecoderError"],[4,"EncoderError"],[3,"Decoder"],[3,"Encoder"],[3,"UnitStatus"],[3,"Job"],[3,"UnitFile"],[3,"UnitFileChange"],[3,"UnitFileChanges"],[3,"UnitProperty"],[3,"UnitAux"],[3,"Connection"]]};
searchIndex['rustc-serialize'] = {"items":[[0,"","rustc-serialize","Support code for encoding and decoding types."],[11,"encode","collections::string","",0],[11,"decode","","",0],[11,"encode","alloc::boxed","",1],[11,"decode","","",1],[11,"decode","","",1],[11,"encode","alloc::rc","",2],[11,"decode","","",2],[11,"encode","collections::vec","",3],[11,"decode","","",3],[11,"encode","core::option","",4],[11,"decode","","",4],[11,"encode","std::old_path::posix","",5],[11,"decode","","",5],[11,"encode","std::old_path::windows","",6],[11,"decode","","",6],[11,"encode","core::cell","",7],[11,"decode","","",7],[11,"encode","","",8],[11,"decode","","",8],[11,"encode","alloc::arc","",9],[11,"decode","","",9],[11,"encode","collections::dlist","",10],[11,"decode","","",10],[11,"encode","collections::ring_buf","",11],[11,"decode","","",11],[11,"encode","collections::btree::map","",12],[11,"decode","","",12],[11,"encode","collections::btree::set","",13],[11,"decode","","",13],[11,"encode","std::collections::hash::map","",14],[11,"decode","","",14],[11,"encode","std::collections::hash::set","",15],[11,"decode","","",15],[11,"encode","collections::vec_map","",16],[11,"decode","","",16],[0,"base64","rustc-serialize","Base64 binary-to-text encoding"],[3,"Config","rustc-serialize::base64","Contains configuration parameters for `to_base64`."],[12,"char_set","","Character set to use",17],[12,"newline","","Newline to use",17],[12,"pad","","True to pad output with `=` characters",17],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",17],[4,"CharacterSet","","Available encoding character sets"],[13,"Standard","","The standard character set (uses `+` and `/`)",18],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",18],[4,"Newline","","Available newline types"],[13,"LF","","A linefeed (i.e. Unix-style newline)",19],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",19],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string"],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",20],[13,"InvalidBase64Length","","The input had an invalid length",20],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding"],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding"],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding"],[8,"ToBase64","","A trait for converting a value to base64 encoding."],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",21],[8,"FromBase64","","A trait for converting from base64 encoded values."],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",22],[11,"fmt","","",20],[11,"description","","",20],[11,"fmt","","",20],[0,"hex","rustc-serialize","Hex binary-to-text encoding"],[4,"FromHexError","rustc-serialize::hex","Errors that can occur when decoding a hex encoded string"],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",23],[13,"InvalidHexLength","","The input had an invalid length",23],[8,"ToHex","","A trait for converting a value to hexadecimal encoding"],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",24],[8,"FromHex","","A trait for converting hexadecimal encoded values"],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",25],[11,"fmt","","",23],[11,"description","","",23],[11,"fmt","","",23],[0,"json","rustc-serialize","JSON parsing and serialization"],[3,"PrettyJson","rustc-serialize::json",""],[3,"AsJson","",""],[3,"AsPrettyJson","",""],[3,"Encoder","","A structure for implementing serialization to JSON."],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x"],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char."],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure."],[3,"Decoder","","A structure to decode JSON to values in rust."],[4,"Json","","Represents a json value"],[13,"I64","","",26],[13,"U64","","",26],[13,"F64","","",26],[13,"String","","",26],[13,"Boolean","","",26],[13,"Array","","",26],[13,"Object","","",26],[13,"Null","","",26],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream."],[13,"InvalidSyntax","","",27],[13,"InvalidNumber","","",27],[13,"EOFWhileParsingObject","","",27],[13,"EOFWhileParsingArray","","",27],[13,"EOFWhileParsingValue","","",27],[13,"EOFWhileParsingString","","",27],[13,"KeyMustBeAString","","",27],[13,"ExpectedColon","","",27],[13,"TrailingCharacters","","",27],[13,"TrailingComma","","",27],[13,"InvalidEscape","","",27],[13,"InvalidUnicodeCodePoint","","",27],[13,"LoneLeadingSurrogateInHexEscape","","",27],[13,"UnexpectedEndOfHexEscape","","",27],[13,"UnrecognizedHex","","",27],[13,"NotFourDigit","","",27],[13,"NotUtf8","","",27],[4,"ParserError","",""],[13,"SyntaxError","","msg, line, col",28],[13,"IoError","","",28],[4,"DecoderError","",""],[13,"ParseError","","",29],[13,"ExpectedError","","",29],[13,"MissingFieldError","","",29],[13,"UnknownVariantError","","",29],[13,"ApplicationError","","",29],[4,"EncoderError","",""],[13,"FmtError","","",30],[13,"BadHashmapKey","","",30],[4,"JsonEvent","","The output of the streaming parser."],[13,"ObjectStart","","",31],[13,"ObjectEnd","","",31],[13,"ArrayStart","","",31],[13,"ArrayEnd","","",31],[13,"BooleanValue","","",31],[13,"I64Value","","",31],[13,"U64Value","","",31],[13,"F64Value","","",31],[13,"StringValue","","",31],[13,"NullValue","","",31],[13,"Error","","",31],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x"],[13,"Index","","",32],[13,"Key","","",32],[5,"error_str","","Returns a readable error string for a given error code."],[5,"decode","","Shortcut function to decode a JSON `&str` into an object"],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`"],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`"],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`"],[6,"Array","",""],[6,"Object","",""],[6,"BuilderError","",""],[6,"EncodeResult","",""],[6,"DecodeResult","",""],[8,"ToJson","","A trait for converting values to JSON"],[10,"to_json","","Converts the value of `self` to an instance of JSON",33],[11,"fmt","","",26],[11,"partial_cmp","","",26],[11,"lt","","",26],[11,"le","","",26],[11,"gt","","",26],[11,"ge","","",26],[11,"eq","","",26],[11,"ne","","",26],[11,"clone","","",26],[11,"eq","","",27],[11,"ne","","",27],[11,"clone","","",27],[11,"fmt","","",28],[11,"eq","","",28],[11,"ne","","",28],[11,"clone","","",28],[11,"fmt","","",29],[11,"eq","","",29],[11,"ne","","",29],[11,"clone","","",29],[11,"fmt","","",30],[11,"fmt","","",27],[11,"description","","",29],[11,"cause","","",29],[11,"fmt","","",29],[11,"description","","",28],[11,"fmt","","",28],[11,"description","","",30],[11,"fmt","","",30],[11,"from_error","","",30],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",34],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",34],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",34],[6,"Error","",""],[11,"emit_nil","","",34],[11,"emit_usize","","",34],[11,"emit_u64","","",34],[11,"emit_u32","","",34],[11,"emit_u16","","",34],[11,"emit_u8","","",34],[11,"emit_isize","","",34],[11,"emit_i64","","",34],[11,"emit_i32","","",34],[11,"emit_i16","","",34],[11,"emit_i8","","",34],[11,"emit_bool","","",34],[11,"emit_f64","","",34],[11,"emit_f32","","",34],[11,"emit_char","","",34],[11,"emit_str","","",34],[11,"emit_enum","","",34],[11,"emit_enum_variant","","",34],[11,"emit_enum_variant_arg","","",34],[11,"emit_enum_struct_variant","","",34],[11,"emit_enum_struct_variant_field","","",34],[11,"emit_struct","","",34],[11,"emit_struct_field","","",34],[11,"emit_tuple","","",34],[11,"emit_tuple_arg","","",34],[11,"emit_tuple_struct","","",34],[11,"emit_tuple_struct_arg","","",34],[11,"emit_option","","",34],[11,"emit_option_none","","",34],[11,"emit_option_some","","",34],[11,"emit_seq","","",34],[11,"emit_seq_elt","","",34],[11,"emit_map","","",34],[11,"emit_map_elt_key","","",34],[11,"emit_map_elt_val","","",34],[11,"encode","","",26],[11,"from_reader","","Decodes a json value from an `&mut old_io::Reader`",26],[11,"from_str","","Decodes a json value from a string",26],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",26],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",26],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",26],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",26],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",26],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",26],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",26],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",26],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",26],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",26],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",26],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",26],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",26],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",26],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",26],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",26],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",26],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",26],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",26],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",26],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",26],[6,"Output","",""],[11,"index","","",26],[6,"Output","",""],[11,"index","","",26],[11,"fmt","","",31],[11,"clone","","",31],[11,"eq","","",31],[11,"ne","","",31],[11,"fmt","","",32],[11,"clone","","",32],[11,"eq","","",32],[11,"ne","","",32],[11,"new","","",35],[11,"len","","Returns The number of elements in the Stack.",35],[11,"is_empty","","Returns true if the stack is empty.",35],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",35],[11,"is_equal_to","","Compares this stack with an array of StackElements.",35],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",35],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",35],[11,"top","","Returns the top-most element (if any).",35],[6,"Item","",""],[11,"next","","",36],[11,"new","","Creates the JSON parser.",36],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",36],[11,"new","","Create a JSON Builder.",37],[11,"build","","",37],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",38],[6,"Error","",""],[11,"read_nil","","",38],[11,"read_usize","","",38],[11,"read_u8","","",38],[11,"read_u16","","",38],[11,"read_u32","","",38],[11,"read_u64","","",38],[11,"read_isize","","",38],[11,"read_i8","","",38],[11,"read_i16","","",38],[11,"read_i32","","",38],[11,"read_i64","","",38],[11,"read_f32","","",38],[11,"read_f64","","",38],[11,"read_bool","","",38],[11,"read_char","","",38],[11,"read_str","","",38],[11,"read_enum","","",38],[11,"read_enum_variant","","",38],[11,"read_enum_variant_arg","","",38],[11,"read_enum_struct_variant","","",38],[11,"read_enum_struct_variant_field","","",38],[11,"read_struct","","",38],[11,"read_struct_field","","",38],[11,"read_tuple","","",38],[11,"read_tuple_arg","","",38],[11,"read_tuple_struct","","",38],[11,"read_tuple_struct_arg","","",38],[11,"read_option","","",38],[11,"read_seq","","",38],[11,"read_seq_elt","","",38],[11,"read_map","","",38],[11,"read_map_elt_key","","",38],[11,"read_map_elt_val","","",38],[11,"error","","",38],[11,"to_json","","",26],[11,"to_json","collections::string","",0],[11,"to_json","collections::vec","",3],[11,"to_json","collections::btree::map","",12],[11,"to_json","std::collections::hash::map","",14],[11,"to_json","core::option","",4],[11,"fmt","rustc-serialize::json","Encodes a json value into a string",26],[11,"fmt","","Encodes a json value into a string",39],[11,"fmt","","Encodes a json value into a string",40],[11,"indent","","Set the indentation level for the emitted JSON",41],[11,"fmt","","Encodes a json value into a string",41],[6,"Err","",""],[11,"from_str","","",26],[11,"encode","collections::string","",0],[11,"decode","","",0],[11,"encode","alloc::boxed","",1],[11,"decode","","",1],[11,"decode","","",1],[11,"encode","alloc::rc","",2],[11,"decode","","",2],[11,"encode","collections::vec","",3],[11,"decode","","",3],[11,"encode","core::option","",4],[11,"decode","","",4],[11,"encode","std::old_path::posix","",5],[11,"decode","","",5],[11,"encode","std::old_path::windows","",6],[11,"decode","","",6],[11,"encode","core::cell","",7],[11,"decode","","",7],[11,"encode","","",8],[11,"decode","","",8],[11,"encode","alloc::arc","",9],[11,"decode","","",9],[8,"Decoder","rustc-serialize",""],[16,"Error","rustc-serialize::Decoder",""],[10,"read_nil","rustc-serialize","",42],[10,"read_usize","","",42],[10,"read_u64","","",42],[10,"read_u32","","",42],[10,"read_u16","","",42],[10,"read_u8","","",42],[10,"read_isize","","",42],[10,"read_i64","","",42],[10,"read_i32","","",42],[10,"read_i16","","",42],[10,"read_i8","","",42],[10,"read_bool","","",42],[10,"read_f64","","",42],[10,"read_f32","","",42],[10,"read_char","","",42],[10,"read_str","","",42],[10,"read_enum","","",42],[10,"read_enum_variant","","",42],[10,"read_enum_variant_arg","","",42],[10,"read_enum_struct_variant","","",42],[10,"read_enum_struct_variant_field","","",42],[10,"read_struct","","",42],[10,"read_struct_field","","",42],[10,"read_tuple","","",42],[10,"read_tuple_arg","","",42],[10,"read_tuple_struct","","",42],[10,"read_tuple_struct_arg","","",42],[10,"read_option","","",42],[10,"read_seq","","",42],[10,"read_seq_elt","","",42],[10,"read_map","","",42],[10,"read_map_elt_key","","",42],[10,"read_map_elt_val","","",42],[10,"error","","",42],[8,"Encoder","",""],[16,"Error","rustc-serialize::Encoder",""],[10,"emit_nil","rustc-serialize","",43],[10,"emit_usize","","",43],[10,"emit_u64","","",43],[10,"emit_u32","","",43],[10,"emit_u16","","",43],[10,"emit_u8","","",43],[10,"emit_isize","","",43],[10,"emit_i64","","",43],[10,"emit_i32","","",43],[10,"emit_i16","","",43],[10,"emit_i8","","",43],[10,"emit_bool","","",43],[10,"emit_f64","","",43],[10,"emit_f32","","",43],[10,"emit_char","","",43],[10,"emit_str","","",43],[10,"emit_enum","","",43],[10,"emit_enum_variant","","",43],[10,"emit_enum_variant_arg","","",43],[10,"emit_enum_struct_variant","","",43],[10,"emit_enum_struct_variant_field","","",43],[10,"emit_struct","","",43],[10,"emit_struct_field","","",43],[10,"emit_tuple","","",43],[10,"emit_tuple_arg","","",43],[10,"emit_tuple_struct","","",43],[10,"emit_tuple_struct_arg","","",43],[10,"emit_option","","",43],[10,"emit_option_none","","",43],[10,"emit_option_some","","",43],[10,"emit_seq","","",43],[10,"emit_seq_elt","","",43],[10,"emit_map","","",43],[10,"emit_map_elt_key","","",43],[10,"emit_map_elt_val","","",43],[8,"Decodable","",""],[10,"decode","","",44],[8,"Encodable","",""],[10,"encode","","",45],[8,"DecoderHelpers","",""],[10,"read_to_vec","","",46],[8,"EncoderHelpers","",""],[10,"emit_from_vec","","",47]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[3,"Vec"],[4,"Option"],[3,"Path"],[3,"Path"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"DList"],[3,"RingBuf"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"VecMap"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};

searchIndex['dbus-rs'] = {"items":[[0,"","dbus-rs",""],[3,"PropHandler","",""],[3,"Props","",""],[3,"ObjectPath","",""],[3,"Interface","",""],[3,"Property","",""],[3,"Method","",""],[3,"Argument","",""],[3,"Error","",""],[3,"Message","",""],[3,"ConnectionItems","",""],[3,"Connection","",""],[4,"BusType","",""],[13,"Session","","",0],[13,"System","","",0],[13,"Starter","","",0],[4,"NameFlag","",""],[13,"AllowReplacement","","",1],[13,"ReplaceExisting","","",1],[13,"DoNotQueue","","",1],[4,"RequestNameReply","",""],[13,"PrimaryOwner","","",2],[13,"InQueue","","",2],[13,"Exists","","",2],[13,"AlreadyOwner","","",2],[4,"ReleaseNameReply","",""],[13,"Released","","",3],[13,"NonExistent","","",3],[13,"NotOwner","","",3],[4,"MessageType","",""],[13,"Invalid","","",4],[13,"MethodCall","","",4],[13,"MethodReturn","","",4],[13,"Error","","",4],[13,"Signal","","",4],[4,"MessageItem","",""],[13,"Array","","",5],[13,"Struct","","",5],[13,"Variant","","",5],[13,"DictEntry","","",5],[13,"ObjectPath","","",5],[13,"Str","","",5],[13,"Bool","","",5],[13,"Byte","","",5],[13,"Int16","","",5],[13,"Int32","","",5],[13,"Int64","","",5],[13,"UInt16","","",5],[13,"UInt32","","",5],[13,"UInt64","","",5],[13,"Double","","",5],[4,"ConnectionItem","",""],[13,"Nothing","","",6],[13,"MethodCall","","",6],[13,"Signal","","",6],[11,"eq","","",0],[11,"ne","","",0],[11,"fmt","","",0],[11,"eq","","",1],[11,"ne","","",1],[11,"fmt","","",1],[11,"eq","","",2],[11,"ne","","",2],[11,"fmt","","",2],[11,"eq","","",3],[11,"ne","","",3],[11,"fmt","","",3],[11,"eq","","",4],[11,"ne","","",4],[11,"fmt","","",4],[11,"new","","",7],[11,"get","","",7],[11,"set","","",7],[11,"get_all","","",7],[11,"new","","",8],[11,"get_all","","",8],[11,"map_mut","","",8],[11,"map","","",8],[11,"get","","",8],[11,"set","","",8],[11,"handle_message","","",8],[11,"new","","",9],[11,"new","","",10],[11,"new_ro","","",11],[11,"new_rw","","",11],[11,"new_wo","","",11],[11,"new","","",12],[11,"get","","",5],[11,"new","","",13],[11,"insert_interface","","",13],[11,"is_registered","","",13],[11,"set_registered","","",13],[11,"handle_message","","",13],[6,"MethodHandler","",""],[6,"MethodResult","",""],[6,"TypeSig","",""],[11,"new","","",14],[11,"new_custom","","",14],[11,"get","","",14],[11,"name","","",14],[11,"message","","",14],[11,"drop","","",14],[11,"fmt","","",14],[11,"description","","",14],[11,"fmt","","",14],[11,"clone","","",5],[11,"partial_cmp","","",5],[11,"lt","","",5],[11,"le","","",5],[11,"gt","","",5],[11,"ge","","",5],[11,"eq","","",5],[11,"ne","","",5],[11,"fmt","","",5],[11,"type_sig","","",5],[11,"array_type","","",5],[11,"from_dict","","",5],[11,"new_method_call","","",15],[11,"new_signal","","",15],[11,"new_method_return","","",15],[11,"new_error","","",15],[11,"get_items","","",15],[11,"append_items","","",15],[11,"msg_type","","",15],[11,"sender","","",15],[11,"headers","","",15],[11,"as_result","","",15],[11,"drop","","",15],[11,"fmt","","",15],[11,"fmt","","",6],[6,"Item","",""],[11,"next","","",16],[11,"get_private","","",17],[11,"send_with_reply_and_block","","",17],[11,"send","","",17],[11,"unique_name","","",17],[11,"iter","","",17],[11,"register_object_path","","",17],[11,"unregister_object_path","","",17],[11,"list_registered_object_paths","","",17],[11,"register_name","","",17],[11,"release_name","","",17],[11,"add_match","","",17],[11,"remove_match","","",17],[11,"drop","","",17],[11,"fmt","","",17]],"paths":[[4,"BusType"],[4,"NameFlag"],[4,"RequestNameReply"],[4,"ReleaseNameReply"],[4,"MessageType"],[4,"MessageItem"],[4,"ConnectionItem"],[3,"Props"],[3,"PropHandler"],[3,"Argument"],[3,"Method"],[3,"Property"],[3,"Interface"],[3,"ObjectPath"],[3,"Error"],[3,"Message"],[3,"ConnectionItems"],[3,"Connection"]]};

initSearch(searchIndex);
